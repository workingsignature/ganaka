model Strategy {
    id String @id @default(uuid())

    name             String
    description      String
    owner            User              @relation(fields: [ownerId], references: [id], onDelete: Cascade)
    isPublic         Boolean           @default(false)
    versions         StrategyVersion[]
    customAttributes Json?             @default("{}")

    ownerId   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([ownerId, name])
}

model StrategyVersion {
    id String @id @default(uuid())

    name             String
    version          String
    runs             StrategyVersionRun[]
    strategy         Strategy             @relation(fields: [strategyId], references: [id], onDelete: Cascade)
    customAttributes Json?                @default("{}")

    strategyId String
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model StrategyVersionRun {
    id String @id @default(uuid())

    startTime        DateTime
    endTime          DateTime
    currentBalance   Float    @default(0)
    startingBalance  Float    @default(0)
    endingBalance    Float    @default(0)
    runType          RunType
    errorLog         String?
    customAttributes Json?    @default("{}")

    status  RunStatus       @default(PENDING)
    version StrategyVersion @relation(fields: [versionId], references: [id], onDelete: Cascade)

    versionId String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([versionId])
}

enum RunType {
    BACKTEST
    LIVE
}

enum RunStatus {
    PENDING
    RUNNING
    COMPLETED
    FAILED
    CANCELLED
}
