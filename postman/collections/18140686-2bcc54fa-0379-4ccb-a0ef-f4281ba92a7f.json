{
	"info": {
		"_postman_id": "18140686-2bcc54fa-0379-4ccb-a0ef-f4281ba92a7f",
		"name": "Platform",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Developer",
			"item": [
				{
					"name": "Access Key",
					"item": [
						{
							"name": "All Keys",
							"id": "18140686-000325e0-2fdf-4afd-b495-3f3947e48fbc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/{{api_version}}/developerkey",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{api_version}}",
										"developerkey"
									]
								},
								"description": "## All Keys (GET /developerkey)\n\nThis endpoint retrieves all developer keys available for the authenticated user or application. Use this endpoint to list and manage your API keys for bot authentication.\n\n### How it Works\n\n- **Input:** No request body is required. Ensure that the necessary authentication headers and variables (`clerk_access_token`, `host`, `api_version`) are set.\n    \n- **Process:** The API returns a list of all developer keys associated with your account or application.\n    \n- **Next Step:** Use the returned keys to authenticate API requests or manage your developer credentials as needed.\n    \n\n### Request Example\n\n``` http\nGET {{host}}/{{api_version}}/developerkey\nAuthorization: Bearer {{clerk_access_token}}\n\n ```\n\n### Response Example\n\n``` json\n[\n  {\n    \"id\": \"key_1234567890abcdef\",\n    \"name\": \"My First Key\",\n    \"created_at\": \"2024-06-01T12:34:56Z\",\n    \"last_used_at\": \"2024-06-10T08:21:00Z\",\n    \"scopes\": [\"read\", \"write\"]\n  },\n  {\n    \"id\": \"key_abcdef1234567890\",\n    \"name\": \"Integration Key\",\n    \"created_at\": \"2024-05-15T09:00:00Z\",\n    \"last_used_at\": null,\n    \"scopes\": [\"read\"]\n  }\n]\n\n ```\n\n- Each object in the array represents a developer key with its metadata.\n    \n\n### Use Case\n\n- Use this endpoint to programmatically retrieve all your developer keys.\n    \n- Useful for auditing, rotating, or managing API keys for your integrations.\n    \n\n### Related Endpoints\n\n- [Create a developer key](https://add-link-here): Generate a new developer key.\n    \n- [Delete a developer key](https://add-link-here): Remove an existing developer key.\n    \n\n### Notes\n\n- Ensure you have a valid `clerk_access_token` and the correct environment variables set.\n    \n- The response will include all keys you have access to, along with their metadata."
							},
							"response": []
						},
						{
							"name": "Create Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "448d5e48-5086-4dc5-b90c-384976abf042",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"developer_access_token\", response.data.key);"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"id": "18140686-b9b671b4-1ab3-417f-80d8-53954b15648f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{host}}/{{api_version}}/developerkey",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{api_version}}",
										"developerkey"
									]
								},
								"description": "## Create Developer Key (POST {{host}}/{{api_version}}/developerkey)\n\n### Purpose\n\nThis endpoint is used to generate a new developer access key. The key can be used to authenticate subsequent API requests that require developer-level permissions. This is typically the first step for a developer to gain programmatic access to protected resources or endpoints.\n\n### How to Use\n\n- **Method:** POST\n    \n- **URL:** `{{host}}/{{api_version}}/developerkey`\n    \n- **Request Body:** _None required._ This endpoint does not require a request body.\n    \n- **Authentication:** Ensure that the required authentication (such as a valid access token) is provided if needed by your API gateway or backend.\n    \n\n### Variables Used\n\nThis request uses the following variables:\n\n- `{{host}}`: The base URL of the API server. Set this variable in your environment for the request to resolve correctly.\n    \n- `{{api_version}}`: The version of the API you are targeting (e.g., `v1`). Set this variable in your environment.\n    \n- `clerk_access_token`: (Global variable) Used for authentication if required by your API implementation. Ensure this is set before sending the request.\n    \n\n### Post-Response Script\n\nAfter the response is received, the following script is executed:\n\n``` javascript\nconst response = pm.response.json();\npm.globals.set(\"developer_access_token\", response.data.key);\n\n ```\n\n**What it does:**\n\n- Parses the JSON response.\n    \n- Extracts the `key` property from the `data` object in the response.\n    \n- Sets a global variable `developer_access_token` with the value of the key. This allows you to use the developer access token in subsequent requests by referencing `{{developer_access_token}}`.\n    \n\n### Typical Workflow\n\n1. Send this request to generate a new developer key.\n    \n2. The key is automatically saved as a global variable for use in other requests.\n    \n3. Use the `developer_access_token` in the headers or as required by other endpoints that need developer authentication.\n    \n\n### Notes\n\n- Make sure all required variables are set in your environment or globals before sending the request.\n    \n- If you encounter authentication errors, verify that your `clerk_access_token` (or other required tokens) are valid and up to date."
							},
							"response": []
						},
						{
							"name": "Deactivate Key",
							"id": "18140686-e71da610-6cbe-4f89-80b8-b948d97eb9ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}/{{api_version}}/developerkey/:id/deactivate",
									"host": [
										"{{host}}"
									],
									"path": [
										"{{api_version}}",
										"developerkey",
										":id",
										"deactivate"
									],
									"variable": [
										{
											"key": "id",
											"value": "abc5075d-fd51-4fa8-be8f-15b844e8a742"
										}
									]
								},
								"description": "## Deactivate Developer Key (PATCH)\n\nThis endpoint deactivates a specific developer key, rendering it unusable for future API requests. Use this operation when you want to revoke access associated with a developer key without deleting it from the system.\n\n### HTTP Method\n- **PATCH**\n\n### URL Structure\n```\n{{host}}/{{api_version}}/developerkey/:id/deactivate\n```\n- `:id` (path variable): The unique identifier of the developer key to be deactivated. Replace `:id` with the actual developer key ID (e.g., `abc5075d-fd51-4fa8-be8f-15b844e8a742`).\n\n### Request Body\n- **None.** This endpoint does not require a request body. All necessary information is provided via the URL path variable.\n\n### Authentication\n- Requires a valid authentication token. Ensure the `clerk_access_token` variable is set with an active token.\n- The request should be made by an authorized user with sufficient permissions to manage developer keys.\n\n### Usage Notes\n- Deactivation is irreversible via this endpoint. Once deactivated, the developer key cannot be used for authentication or API access.\n- The endpoint is useful for quickly revoking access in case of key compromise or when a developer leaves your organization.\n- The `host` and `api_version` variables should be set appropriately in your environment or collection variables.\n\n### Example Request\n```\nPATCH {{host}}/{{api_version}}/developerkey/abc5075d-fd51-4fa8-be8f-15b844e8a742/deactivate\nAuthorization: Bearer {{clerk_access_token}}\n```\n\n### Response\n- Returns a status indicating the success or failure of the deactivation operation. Refer to the API documentation for detailed response schema and error codes.\n"
							},
							"response": []
						}
					],
					"id": "18140686-993773e1-f375-4c85-8079-95fdec9d92db"
				},
				{
					"name": "Candle Data",
					"id": "18140686-effffd52-113a-4c6d-890c-7b0ad10aa310",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/{{api_version}}/developer/candle/:symbol",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{api_version}}",
								"developer",
								"candle",
								":symbol"
							],
							"variable": [
								{
									"key": "symbol",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Shortlists",
					"id": "18140686-3c796727-310a-4ff4-a698-a1621ad48326",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/{{api_version}}/developer/candle/:symbol",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{api_version}}",
								"developer",
								"candle",
								":symbol"
							],
							"variable": [
								{
									"key": "symbol",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "18140686-281bdae0-c705-45f4-9350-703e1f4037a2",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{developer_access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b24bcb17-a820-48e7-a3ac-d3fcf995e4ad",
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2a8d4407-baf9-4f87-bb9b-eec2f75f55ba",
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Client",
			"item": [],
			"id": "18140686-71fa74ef-817f-410e-b2a9-a782c4094e40",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{clerk_access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a8226561-3e07-4402-80ad-7bef72e16856",
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "524478fb-7d99-4239-8a59-2d935453500b",
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "General",
			"item": [],
			"id": "18140686-abd10236-aa90-447c-9d47-ab58ebdde752"
		}
	]
}